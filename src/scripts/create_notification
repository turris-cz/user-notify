#!/bin/sh
base_dir='/tmp/user_notify'
trigger='false'

SCRIPTNAME="$(basename "$0")"
USAGE="Usage:
    $SCRIPTNAME -h
    $SCRIPTNAME [-t] [-d base_dir] -s (restart|error|update|news) 'msg_cs' 'msg_en'"

HELP="$USAGE

    Create Turris notification

Arguments:
    -h      Print this help and exit
    -t      Send notification immediately (triggers notifier script)
    -b base_dir
            Directory for notifications (defaults to '$base_dir')
    -s (restart|error|update|news)
            Type of a notification message
    msg_cs
            Notification text in Czech
    msg_en
            Notification text in English

Examples:
    Create an information notification
        $ create_notification -s news 'Ahoj světe!' 'Hello world!'

    Create and send testing notification immediately
        $ create_notification -t -s error 'Toto je testovací notifikace' 'This is a testing notification'
"


while getopts "htd:s:" OPT; do
	case "$OPT" in
		h)
			echo "$HELP"
			exit 0
			;;

		t)
			trigger='true'
			;;

		d)
			base_dir="$OPTARG"
			;;

		s)
			severity="$OPTARG"
			[ "$severity" = "restart" -o "$severity" = "error" -o "$severity" = "update" -o "$severity" = "news" ] || {
				echo "$SCRIPTNAME: Unknown notification severity: $severity" >&2
				echo "$USAGE" >&2
				exit 1
			}
			;;

		*)
			# error message is reported by getopts
			echo "$USAGE" >&2
			exit 1
			;;
	esac
done
shift $((OPTIND-1))

[ -n "${severity:-}" ] || {
	echo "$SCRIPTNAME: Severity must be specified" >&2
	echo "$USAGE" >&2
	exit 1
}

if [ $# -eq 1 ]; then
	compat='true'
	message="$1"
elif [ $# -eq 2 ]; then
	compat='false'
	message_cs="$1"
	message_en="$2"
else
	echo "$SCRIPTNAME: Wrong number of arguments" >&2
	echo "$USAGE" >&2
	exit 1
fi


# This should be unique
msg_id="$(/bin/busybox date +%s)-$$"

if [ "$compat" = 'true' ] ; then
	export LANG="$(uci -q get foris.settings.lang)"
	export LANGUAGE="$LANG"
	[ -n "$GETTEXT_DOMAIN" ] || export GETTEXT_DOMAIN="user-notify"
fi

mkdir -p "$base_dir"
mkdir "$base_dir/tmp.$msg_id"
echo "$severity" > "$base_dir/tmp.$msg_id/severity"
if [ "$compat" = 'true' ] ; then
	if [ -x /usr/bin/gettext_filter ]; then
		echo "$message" | gettext_filter > "$base_dir/tmp.$msg_id/message"
	else
		echo "$message" > "$base_dir/tmp.$msg_id/message"
	fi
else
	echo "$message_cs" > "$base_dir/tmp.$msg_id/message_cs"
	echo "$message_en" > "$base_dir/tmp.$msg_id/message_en"
fi

mv "$base_dir/tmp.$msg_id" "$base_dir/$msg_id"

if [ -x /usr/bin/foris-notify-wrapper ]; then
	# count messages based on their severity
	total=$(ls -1 "$base_dir"/*-*/severity 2>/dev/null | wc -l)
	displayed=$(ls -1 "$base_dir"/*-*/displayed  2>/dev/null | wc -l)
	active=$((total - displayed))
	# run on background and close outputs to speed up cmd execution
	/usr/bin/foris-notify-wrapper -m router_notifications -a create "{\"severity\": \"$severity\", \"id\": \"$msg_id\", \"new_count\": $active}" 1>/dev/null 2>&1 &
fi

if [ "$trigger" = 'true' ] ; then
	exec notifier -d "$base_dir"
fi
